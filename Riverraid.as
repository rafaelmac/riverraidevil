package  {	import flash.display.MovieClip;	import flash.events.Event;	import Inimigos.Helicoptero;	import flash.utils.Timer;	import flash.events.TimerEvent;			public class Riverraid extends MovieClip {				var aviao:Aviao = new Aviao();		public var fase1:Fase1 = new Fase1();		var pontos:Pontos = new Pontos();		var listaHelicoptero:Array = new Array();		var timerStart:Timer = new Timer (5000);				public function Riverraid() {			// constructor code						addChild(fase1);			addChild(aviao);						// ADICIONANDO INIMIGOS INICIO						var h = new Helicoptero(100,0,1, 100, 100, 0);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(100,-200,1, 100, 500, 6000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(241, 9100 - 10000, 3, 241, 300, 3000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(400, 8900 - 10000, 3, 241, 400, 3000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(100, 8400 - 10000, 1, 100, 100, 6000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(300, 8300 - 10000, 1, 100, 300, 6000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(500, 8200 - 10000, 1, 100, 100, 1000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(300, 7800 - 10000, 1, 100, 300, 3000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(700, 7600 - 10000, 1, 100, 700, 2000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(200, 7300 - 10000, 3, 200, 300, 3000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(300, 7000 - 10000, 3, 200, 300, 6000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(400, 6500 - 10000, 2, 200, 400, 3000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(600, 6100 - 10000, 2, 200, 600, 2100);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(500, 5800 - 10000, 2, 100, 500, 6000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(250, 5600 - 10000, 2, 250, 530, 3000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(350, 5500 - 10000, 2, 350, 400, 3000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(350, 4600 - 10000, 2, 150, 150, 1500);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(120, 4000 - 10000, 1, 120, 450, 900);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(400, 3700 - 10000, 1, 100, 400, 500);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(400, 3500 - 10000, 1, 400, 400, 10000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(300, 3200 - 10000, 3, 300, 300, 10000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(380, 2900 - 10000, 3, 380, 380, 10000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(340, 2800 - 10000, 3, 340, 380, 10000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(340, 2500 - 10000, 3, 340, 450, 1000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(470, 2400 - 10000, 3, 240, 470, 1000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(470, 2200 - 10000, 3, 240, 470, 10000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(320, 1900 - 10000, 3, 200, 320, 10000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(360, 1700 - 10000, 1, 360, 400, 1200);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(320, 1600 - 10000, 1, 200, 320, 3000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(400, 1400 - 10000, 1, 400, 400, 10000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(400, 1100 - 10000, 1, 300, 400, 1000);			addChild(h);			listaHelicoptero.push(h);						h = new Helicoptero(400, 800 - 10000, 1, 300, 400, 10000);			addChild(h);			listaHelicoptero.push(h);									// ADICIONANDO INIMIGOS FIM						// ADICIONANDO RODAPE PONTOS						addChild(pontos);			pontos.y = 768-88;						timerStart.addEventListener(TimerEvent.TIMER, StartGame);			timerStart.start();						trace (listaHelicoptero.length);						//stage.addEventListener(Event.REMOVED, Remove);		}						private function StartGame (e:TimerEvent)		{						this.addEventListener(Event.ENTER_FRAME, LoopGame);			this.addEventListener(Event.ENTER_FRAME, Colisoes);		}				public function SomaPontos():void			{				pontos.pt += 175;				pontos.mt ++;				pontos.pontosmc.pt.text = String(pontos.pt);				pontos.pontosmc.mt.text = String(pontos.mt);			}				public function LoopGame(e:Event):void		{			if (fase1.y < 10250)			{			fase1.y += aviao.velY;			}						for (var i:int=0; i<listaHelicoptero.length; i++)			{				listaHelicoptero[i].y += aviao.velY;			}					}				public function Colisoes(e:Event):void		{			//trace ("aviao.aviaomc.x "+aviao.aviaomc.x);			//if (aviao.aviaomc.hitTestObject(fase1.fase1mc))			if (fase1.fase1mc.fase1_colisao.hitTestPoint(aviao.aviaomc.x+4, aviao.aviaomc.y+14, true ) ||				fase1.fase1mc.fase1_colisao.hitTestPoint(aviao.aviaomc.x+54, aviao.aviaomc.y+9, true ) ||				fase1.fase1mc.fase1_colisao.hitTestPoint(aviao.aviaomc.x+104, aviao.aviaomc.y+14, true ) ||				fase1.fase1mc.fase1_colisao.hitTestPoint(aviao.aviaomc.x+54, aviao.aviaomc.y+70, true ))			{				//trace ("aviao.aviaomc.x "+aviao.aviaomc.x);				//trace ("aviao.aviaomc.y "+aviao.aviaomc.y);				removeChild(h);				h = null;				removeChild(fase1);				fase1 = null;				removeChild(aviao);				aviao = null;				MovieClip(parent).Morto();			}						for (var i:int=0; i<listaHelicoptero.length; i++)			{				if (listaHelicoptero[i].hitTestPoint(aviao.aviaomc.x+4, aviao.aviaomc.y+14, true ) ||					listaHelicoptero[i].hitTestPoint(aviao.aviaomc.x+54, aviao.aviaomc.y+9, true ) ||					listaHelicoptero[i].hitTestPoint(aviao.aviaomc.x+104, aviao.aviaomc.y+14, true ) ||					listaHelicoptero[i].hitTestPoint(aviao.aviaomc.x+54, aviao.aviaomc.y+70, true ))				{					//trace ("aviao.aviaomc.x "+aviao.aviaomc.x);					//trace ("aviao.aviaomc.y "+aviao.aviaomc.y);					 trace ("O Avião colidiu com a Helicoptero");					 removeChild(h);					 h = null;					 removeChild(fase1);					 fase1 = null;					 removeChild(aviao);					 aviao = null;					 MovieClip(parent).Morto();					 				}				}						for (var m:int=0; m<listaHelicoptero.length; m++)			{				for (var j:int=0; j<aviao.tiroLista.length;j++)				{					 if (!aviao.tiroLista[j].visible)						continue;											if (listaHelicoptero[m].currentFrameLabel != "explosao")					 {					 						if (listaHelicoptero[m].hitTestPoint(aviao.tiroLista[j].x, aviao.tiroLista[j].y, true ))						{							 							 trace ("Matou o inimigo");							 listaHelicoptero[m].helicopteroMc.gotoAndPlay ("explosao");							 aviao.tiroLista[j].visible = false; 							 aviao.tiroLista[j].x = -1000;						}					 }				}			}								}	}	}